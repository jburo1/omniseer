# https://docs.nav2.org/configuration/packages/configuring-bt-navigator.html
bt_navigator:
  ros__parameters:
    # default_nav_to_pose_bt_xml: "/omniseer/ros_ws/install/share/omniseer_description/behavour_trees/BT_v0_NavSpin.xml"
    odom_topic: "/odometry/filtered"
    navigators: ["navigate_to_pose"]
    navigate_to_pose:
      plugin: "nav2_bt_navigator::NavigateToPoseNavigator"

# https://docs.nav2.org/configuration/packages/smac/configuring-smac-2d.html
planner_server:
  ros__parameters:
    expected_planner_frequency: 10.0
    introspection_mode: metadata
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_smac_planner::SmacPlanner2D"
      tolerance: 0.125                      # tolerance for planning if unable to reach exact pose, in meters
      downsample_costmap: false             # whether or not to downsample the map
      downsampling_factor: 1                # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
      allow_unknown: true                   # allow traveling in unknown space
      max_iterations: 1000000               # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
      max_on_approach_iterations: 1000      # maximum number of iterations to attempt to reach goal once in tolerance
      max_planning_time: 2.0                # max time in s for planner to plan, smooth
      cost_travel_multiplier: 2.0           # Cost multiplier to apply to search to steer away from high cost areas. Larger values will place in the center of aisles more exactly (if non-`FREE` cost potential field exists) but take slightly longer to compute. To optimize for speed, a value of 1.0 is reasonable. A reasonable tradeoff value is 2.0. A value of 0.0 effective disables steering away from obstacles and acts like a naive binary search A*.
      use_final_approach_orientation: true  # Whether to set the final path pose at the goal's orientation to the requested orientation (false) or in line with the approach angle so the robot doesn't rotate to heading (true)
      smoother:
        max_iterations: 1000
        w_smooth: 0.3
        w_data: 0.2
        tolerance: 1.0e-10


# https://docs.nav2.org/configuration/packages/configuring-mppic.html
controller_server:
  ros__parameters:
    odom_topic: "/odometry/filtered"
    controller_frequency: 15.0
    progress_checker_plugins: ["progress_checker"]
    goal_checker_plugins: ["goal_checker"]
    controller_plugins: ["FollowPath"]
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    goal_checker:
      plugin: "nav2_controller::StoppedGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25
      trans_stopped_velocity: 0.05
      rot_stopped_velocity: 0.10
      stateful: true
    FollowPath:
      plugin: "nav2_rotation_shim_controller::RotationShimController"
      # plugin: "nav2_mppi_controller::MPPIController"
      primary_controller: "nav2_mppi_controller::MPPIController"
      simulate_ahead_time: 0.8
      angular_dist_threshold: 0.7
      motion_model: "Omni"
      batch_size: 1000
      time_steps: 30
      model_dt: 0.0666667
      vx_max: 3.0
      vx_min: -1.0
      vy_max: 1.0
      vy_min: -1.0
      wz_max: 3.0
      # Use the same robot footprint as the costmaps for controller collision checking
      # footprint_model:
      #   type: polygon
      #   footprint: [[0.18, 0.14], [0.18, -0.14], [-0.18, -0.14], [-0.18, 0.14]]
      critics: ["ConstraintCritic", "CostCritic", "GoalCritic", "GoalAngleCritic", "PathAlignCritic", "ObstaclesCritic",
        "PathFollowCritic", "PathAngleCritic", "PreferForwardCritic", "VelocityDeadbandCritic", "TwirlingCritic"]
      ConstraintCritic:
        enabled: true
        cost_power: 1
        cost_weight: 4.0
      GoalCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0
        threshold_to_consider: 1.4
      GoalAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 3.0
        threshold_to_consider: 0.3
      PreferForwardCritic:
        enabled: true
        cost_power: 2
        cost_weight: 10.0
        threshold_to_consider: 0.5
      ObstaclesCritic:
        enabled: true
        cost_power: 1
        repulsion_weight: 1.5
        critical_weight: 20.0
        consider_footprint: true
        collision_cost: 10000.0
        collision_margin_distance: 0.1
        near_goal_distance: 0.5
      CostCritic:
        enabled: true
        cost_power: 1
        cost_weight: 3.81
        critical_cost: 300.0
        consider_footprint: true
        collision_cost: 1000000.0
        near_goal_distance: 1.0
        trajectory_point_step: 2
      PathAlignCritic:
        enabled: true
        cost_power: 1
        cost_weight: 10.0
        max_path_occupancy_ratio: 0.05
        trajectory_point_step: 4
        threshold_to_consider: 0.5
        offset_from_furthest: 20
        use_path_orientations: true
      PathFollowCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0
        offset_from_furthest: 5
        threshold_to_consider: 1.4
      PathAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 2.0
        offset_from_furthest: 4
        threshold_to_consider: 0.5
        max_angle_to_furthest: 1.0
        mode: 0
      VelocityDeadbandCritic:
        enabled: true
        cost_power: 1
        cost_weight: 35.0
        deadband_velocities: [0.05, 0.05, 0.05]
      TwirlingCritic:
        enabled: true
        twirling_cost_power: 1
        twirling_cost_weight: 4.0

# https://docs.nav2.org/configuration/packages/configuring-smoother-server.html
smoother_server:
  ros__parameters:
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"

local_costmap:
  local_costmap:
    ros__parameters:
      transform_tolerance: 0.30
      update_frequency: 10.0
      publish_frequency: 5.0
      always_send_full_costmap: true
      global_frame: odom
      robot_base_frame: base_link
      rolling_window: true
      width: 4
      height: 4
      resolution: 0.05
      footprint: "[[0.18,0.14],[0.18,-0.14],[-0.18,-0.14],[-0.18,0.14]]"
      plugins: ["obstacle_layer","range_layer","inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        observation_sources: scan
        scan:
          topic: /scan
          observation_persistence: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          max_obstacle_height: 2.0
          min_obstacle_height: 0.0
          clearing: true
          marking: true
          inf_is_valid: false
      range_layer:
        plugin: "nav2_costmap_2d::RangeSensorLayer"
        topics: ["/range"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 0.75
        cost_scaling_factor: 2.5


# https://docs.nav2.org/configuration/packages/configuring-costmaps.html
global_costmap:
  global_costmap:
    ros__parameters:
      transform_tolerance: 0.30
      global_frame: map
      robot_base_frame: base_link
      footprint: "[[0.18,0.14],[0.18,-0.14],[-0.18,-0.14],[-0.18,0.14]]"
      resolution: 0.05
      track_unknown_space: true
      plugins: ["static_layer","obstacle_layer", "range_layer", "inflation_layer"]
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        observation_sources: scan
        scan:
          topic: /scan
          obstacle_max_range: 10.0
          obstacle_min_range: 0.0
          raytrace_max_range: 12.0
          raytrace_min_range: 0.0
          max_obstacle_height: 4.0
          min_obstacle_height: 0.0
          clearing: true
          marking: true
          inf_is_valid: false
      range_layer:
        plugin: "nav2_costmap_2d::RangeSensorLayer"
        topics: ["/range"]
        mark_threshold: 0.9
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 1.0
        cost_scaling_factor: 2.5

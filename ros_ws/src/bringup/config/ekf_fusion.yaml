# ekf_fusion.yaml
# Robot Localization EKF for wheel encoders + IMU on Omniseer
ekf_filter:
  ros__parameters:
    # --------------------------------------------------------
    # Core filter
    # --------------------------------------------------------
    frequency: 30.0
    sensor_timeout: 0.1
    two_d_mode: true
    transform_timeout: 0.1
    publish_tf: true
    print_diagnostics: true
    debug: false
    debug_out_file: /tmp/ekf_debug.txt

    # --------------------------------------------------------
    # Frames
    # --------------------------------------------------------
    odom_frame:         odom
    base_link_frame:    base_link
    world_frame:        odom

    # ========================================================
    #  SENSOR 0 : Wheel-encoder odometry
    # ========================================================
    odom0: /mecanum_drive_controller/odometry
    # odom0_differential: false
    # odom0_relative:     false
    odom0_queue_size:   3
    odom0_nodelay:      true
    odom0_config:
      [ false,  false,  false, # x, y, z
        false, false, false,   # roll, pitch, yaw
        true,  true,  false,   # vx, vy, vz
        false, false, true,    # vroll, vpitch, vyaw
        false, false, false ]  # ax, ay, az

    # ========================================================
    #  SENSOR 1 : IMU (raw)
    # ========================================================
    imu0: /imu
    imu0_remove_gravitational_acceleration: true
    # imu0_differential: false
    # imu0_relative:     false`
    imu0_queue_size:   3
    imu0_nodelay:      true
    imu0_config:
      [ false, false, false,  # x, y, z
        false, false,  true,  # roll, pitch, yaw
        false, false, false,  # vx, vy, vz
        false,  false, true,  # vroll, vpitch, vyaw
        true, true, false ]   # ax, ay, az

    process_noise_covariance: [0.2, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                              0.0,    0.2, 0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                              0.0,    0.0,    0.06, 0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                              0.0,    0.0,    0.0,    0.03, 0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                              0.0,    0.0,    0.0,    0.0,    0.03, 0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                              0.0,    0.0,    0.0,    0.0,    0.0,    0.1, 0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                              0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.1, 0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                              0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.1, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                              0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.04, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                              0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.01, 0.0,    0.0,    0.0,    0.0,    0.0,
                              0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.01, 0.0,    0.0,    0.0,    0.0,
                              0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.1, 0.0,    0.0,    0.0,
                              0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.01, 0.0,    0.0,
                              0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.01, 0.0,
                              0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.015]

        # [ADVANCED] This represents the initial value for the state estimate error covariance matrix. Setting a diagonal
        # value (variance) to a large value will result in rapid convergence for initial measurements of the variable in
        # question. Users should take care not to use large values for variables that will not be measured directly. The values
        # are ordered as x, y, z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az. Defaults to the diagonal values below
        # if unspecified. In this example, we specify only the diagonal of the matrix.
    initial_estimate_covariance: [1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9]

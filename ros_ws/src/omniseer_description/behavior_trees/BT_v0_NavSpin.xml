<?xml version="1.0" encoding="UTF-8"?>
<root BTCPP_format="4"
      main_tree_to_execute="navigate_to_pose_and_spin">
  <BehaviorTree ID="navigate_to_pose_and_spin">
    <PipelineSequence name="NavigateWithReplan">
      <ControllerSelector topic_name="controller_selector"
                          default_controller="FollowPath"
                          selected_controller="{selected_controller}"/>
      <PlannerSelector topic_name="planner_selector"
                       default_planner="GridBased"
                       selected_planner="{selected_planner}"/>
      <RateController hz="1.0">
        <PipelineSequence>
          <ComputePathToPose goal="{goal}"
                             use_start="false"
                             planner_id="{selected_planner}"
                             path="{path}"
                             error_code_id="{compute_path_error_code}"
                             error_msg="{compute_path_error_msg}"/>
          <FollowPath controller_id="{selected_controller}"
                      path="{path}"
                      error_code_id="{follow_path_error_code}"
                      error_msg="{follow_path_error_msg}"/>
          <Spin spin_dist="6.283"/>
        </PipelineSequence>
      </RateController>
    </PipelineSequence>
  </BehaviorTree>

  <!-- Description of Node Models (used by Groot) -->
  <TreeNodesModel>
    <Action ID="ComputePathToPose">
      <input_port name="goal">Destination to plan to</input_port>
      <input_port name="start">Use as the planner start pose instead of the current robot pose, if use_start is not false (i.e. not provided or set to true)</input_port>
      <input_port name="use_start">For using or not using (i.e. ignoring) the provided start pose</input_port>
      <input_port name="planner_id">Mapped name to the planner plugin type to use</input_port>
      <input_port name="server_name">Server name</input_port>
      <input_port name="server_timeout">Server timeout</input_port>
      <output_port name="path">Path created by ComputePathToPose node</output_port>
      <output_port name="error_code_id">"Compute path to pose error code"</output_port>
      <output_port name="error_msg">"Compute path to pose error message"</output_port>
    </Action>
    <Action ID="ControllerSelector">
      <input_port name="topic_name">Name of the topic to receive controller selection commands</input_port>
      <input_port name="default_controller">Default controller of the controller selector</input_port>
      <output_port name="selected_controller">Name of the selected controller received from the topic subscription</output_port>
    </Action>
    <Action ID="FollowPath">
      <input_port name="controller_id"
                  default="FollowPath"/>
      <input_port name="path">Path to follow</input_port>
      <input_port name="goal_checker_id">Goal checker</input_port>
      <input_port name="progress_checker_id">Progress checker</input_port>
      <input_port name="server_name">Action server name</input_port>
      <input_port name="server_timeout">Server timeout</input_port>
      <output_port name="error_code_id">Follow Path error code</output_port>
      <output_port name="error_msg">Follow Path error message</output_port>
    </Action>
    <Control ID="PipelineSequence"/>
    <Action ID="PlannerSelector">
      <input_port name="topic_name">Name of the topic to receive planner selection commands</input_port>
      <input_port name="default_planner">Default planner of the planner selector</input_port>
      <output_port name="selected_planner">Name of the selected planner received from the topic subscription</output_port>
    </Action>
    <Decorator ID="RateController">
      <input_port name="hz">Rate</input_port>
    </Decorator>
    <Action ID="Spin">
      <input_port name="spin_dist">Spin distance</input_port>
      <input_port name="time_allowance">Allowed time for spinning</input_port>
      <input_port name="server_name">Server name</input_port>
      <input_port name="server_timeout">Server timeout</input_port>
      <input_port name="is_recovery">If true recovery count will be incremented</input_port>
      <input_port name="disable_collision_checks">Disable collision checking</input_port>
      <output_port name="error_code_id">Spin error code</output_port>
      <output_port name="error_msg">Spin error message</output_port>
    </Action>
  </TreeNodesModel>

</root>
